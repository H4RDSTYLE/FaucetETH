"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGatewayIp = exports.getHostIp = exports.getContainerIp = exports.lookupUpAddress = exports.validateIsInDocker = exports.isInDocker = exports.exec = exports.lookup = void 0;
var fs_1 = require("fs");
var dns_1 = __importDefault(require("dns"));
var util_1 = require("util");
var child_process_1 = __importDefault(require("child_process"));
var os_1 = __importDefault(require("os"));
exports.lookup = util_1.promisify(dns_1.default.lookup);
exports.exec = util_1.promisify(child_process_1.default.exec);
// https://stackoverflow.com/a/37015387
exports.isInDocker = function () {
    var platform = os_1.default.platform();
    // Assume this module is running in linux containers
    if (platform === "darwin" || platform === "win32")
        return false;
    var file = fs_1.readFileSync("/proc/self/cgroup", "utf-8");
    return file.indexOf("/docker") !== -1;
};
function validateIsInDocker() {
    if (!exports.isInDocker()) {
        throw new Error("Attempted to call the method from outside docker container!");
    }
}
exports.validateIsInDocker = validateIsInDocker;
exports.lookupUpAddress = function (host) { return __awaiter(void 0, void 0, void 0, function () {
    var result;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, exports.lookup(host, {
                    family: 4,
                    hints: dns_1.default.ADDRCONFIG | dns_1.default.V4MAPPED,
                })];
            case 1:
                result = _a.sent();
                return [2 /*return*/, result.address];
        }
    });
}); };
function getContainerIp() {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    validateIsInDocker();
                    return [4 /*yield*/, exports.exec("hostname -i")];
                case 1: return [2 /*return*/, (_a.sent()).stdout.trim()];
            }
        });
    });
}
exports.getContainerIp = getContainerIp;
function getHostIp() {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    validateIsInDocker();
                    return [4 /*yield*/, exports.lookupUpAddress("host.docker.internal")];
                case 1: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
exports.getHostIp = getHostIp;
function getGatewayIp() {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    validateIsInDocker();
                    return [4 /*yield*/, exports.lookupUpAddress("gateway.docker.internal")];
                case 1: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
exports.getGatewayIp = getGatewayIp;
//# sourceMappingURL=index.js.map